---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";

const posts = (await getCollection("blog")).sort(
	(a, b) => b.data.created_at.valueOf() - a.data.created_at.valueOf(),
);

const formatTitle = (title: string, length: number) => {
	if (title.length > length) {
		return title.substring(0, length) + "...";
	}
	return title;
};
---

<!doctype html>
<html lang="es">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
			<section class="search-filter-bar">
				<input
					type="text"
					class="search-input"
					id="search-input"
					placeholder="Buscar por título..."
				/>
				<div class="filters">
					<select id="source-filter" class="filter-select">
						<option value="all">Todas las fuentes</option>
						<option value="arXiv CS">ARXIV</option>
						<option value="Revista Iberoamericana de Educación"
							>Revista Iberoamericana de Educación</option
						>
					</select>
					<button
						id="sort-button"
						class="sort-button"
						aria-label="Cambiar orden de fecha"
					>
						<svg
							id="sort-icon"
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							stroke="white"
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							class="icon"
							viewBox="0 0 24 24"
							><path d="m6 9 6 6 6-6"></path></svg
						>
					</button>
				</div>
			</section>
			<section>
				<ul>
					{
						posts.map((post) => (
							<li
								data-title={post.data.title.toLowerCase()}
								data-date={post.data.created_at.valueOf()}
								data-source={post.data.sourcename}
							>
								<a href={`/blog/${post.id}/`}>
									<img
										width={720}
										height={360}
										src={post.data.heroImage}
										alt=""
									/>
									<h4 class="title">
										{formatTitle(post.data.title, 150)}
									</h4>
									<p class="date">
										<FormattedDate
											date={post.data.created_at}
										/>
									</p>
								</a>
							</li>
						))
					}
				</ul>
			</section>
		</main>
		<Footer />
		<script is:inline>
			document.addEventListener("DOMContentLoaded", () => {
				const input = document.getElementById("search-input");
				const sourceSelect = document.getElementById("source-filter");
				const sortButton = document.getElementById("sort-button");
				const sortIcon = document.getElementById("sort-icon");
				const list = document.querySelector("ul");
				const allItems = Array.from(list.querySelectorAll("li"));

				let sortOrder = "desc"; // default inicial

				function updateSortIconRotation() {
					sortIcon.style.transform =
						sortOrder === "asc" ? "rotate(180deg)" : "rotate(0deg)";
				}

				function applyFilters() {
					const query = input.value.toLowerCase();
					const selectedSource = sourceSelect.value;

					const filteredItems = allItems.filter((item) => {
						const title = item.getAttribute("data-title") || "";
						const source = item.getAttribute("data-source") || "";
						const matchesTitle = title.includes(query);
						const matchesSource =
							selectedSource === "all" ||
							source === selectedSource;
						return matchesTitle && matchesSource;
					});

					filteredItems.sort((a, b) => {
						const dateA = parseInt(a.getAttribute("data-date"), 10);
						const dateB = parseInt(b.getAttribute("data-date"), 10);
						return sortOrder === "asc"
							? dateA - dateB
							: dateB - dateA;
					});

					allItems.forEach((item) => (item.style.display = "none"));
					filteredItems.forEach((item) => {
						item.style.display = "";
						list.appendChild(item);
					});
				}

				input.addEventListener("input", applyFilters);
				sourceSelect.addEventListener("change", applyFilters);
				sortButton.addEventListener("click", () => {
					sortOrder = sortOrder === "asc" ? "desc" : "asc";
					updateSortIconRotation();
					applyFilters();
				});

				updateSortIconRotation();
			});
		</script>
	</body>
</html>

<style>
	main {
		padding-top: 1em;
		width: 840px;
	}
	.search-filter-bar {
		display: flex;
		justify-content: space-between;
		align-items: center;
		gap: 0.5rem;
		width: 100%;
		margin-bottom: 1em;
	}
	.search-filter-bar .search-input {
		padding: 0.5rem 1rem;
		font-size: 1rem;
		width: 100%;
		max-width: 500px;
		border: 1px solid #ccc;
		border-radius: 12px;
		outline: none;
	}
	.search-filter-bar .search-input:focus {
		border: 1px solid #ba0c2f;
		outline: 1px solid #ba0c2f;
	}
	.search-filter-bar .filters {
		display: flex;
		gap: 0.5rem;
	}
	.search-filter-bar .filters .filter-select {
		padding: 0.5rem;
		font-size: 1rem;
		max-width: 170px;
		border: 1px solid #ccc;
		border-radius: 12px;
	}
	.search-filter-bar .filters .filter-select:focus {
		border: 1px solid #ba0c2f;	
		outline: 1px solid #ba0c2f;
	}
	.search-filter-bar .filters .sort-button {
		background-color: #ba0c2f;
		border: 1px solid #ccc;
		border-radius: 1000px;
		padding: 0.4rem;
		cursor: pointer;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: background-color 0.2s ease;
	}
	.search-filter-bar .filters .sort-button:hover {
		background-color: #9c0a27;
	}
	.search-filter-bar .filters .sort-button .icon {
		width: 24px;
		height: 24px;
		transition: transform 0.3s ease;
	}
	ul {
		display: flex;
		flex-wrap: wrap;
		gap: 2rem;
		list-style-type: none;
		margin: 0;
		padding: 0;
	}
	ul li {
		width: calc(50% - 1rem);
	}
	ul li * {
		text-decoration: none;
		transition: 0.2s ease;
	}
	ul li:first-child {
		width: 100%;
		margin-bottom: 1rem;
		text-align: center;
	}
	ul li:first-child img {
		width: 100%;
	}
	ul li:first-child .title {
		font-size: 1.4rem;
	}
	ul li img {
		margin-bottom: 0.5rem;
		border-radius: 12px;
	}
	ul li a {
		display: block;
	}
	.title {
		margin: 0;
		color: rgb(var(--black));
		line-height: 1;
		font-size: 1.3rem;
		text-align: left;
	}
	.date {
		margin: 0;
		color: rgb(var(--gray));
		font-size: 1rem;
		text-align: left;
	}
	ul li a:hover h4,
	ul li a:hover .date {
		color: rgb(var(--accent));
	}
	ul a:hover img {
		box-shadow: var(--box-shadow);
	}
	@media (max-width: 720px) {
		ul {
			gap: 0.5em;
		}
		ul li {
			width: 100%;
			text-align: center;
		}
		ul li:first-child {
			margin-bottom: 0;
			padding-right: 0;
			padding-left: 0;
		}
		ul li:first-child .title {
			font-size: 1.1em;
		}
		ul li:first-child img {
			width: 100%;
		}
		.title {
			font-size: 1.1em;
		}
	}
</style>
