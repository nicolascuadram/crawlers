---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, created_at, heroImage, url, type, sourcename, author, linkDownload } = Astro.props;


function formatAuthors(authors){
	let s = authors.replaceAll('"', '')
	s= s.replaceAll(',', ', ')
	return s
}

function formatDate(inputDate) {
  let date;
  console.log(inputDate);
  if (inputDate.includes('-')) {
    inputDate = inputDate.split(' ')[0]
  }
  if (inputDate.includes('[')){
    inputDate = inputDate.replaceAll('[', '')
    inputDate = inputDate.replaceAll(']', '')
  }
  return inputDate

}

const formatKeywords = (source: string, description: string) => {
  if (source === "Revista Iberoamericana de Educación") {
    description = description.split(":")[1] || description;
  }
  
  // Primero split por ';', luego cada fragmento por ',' y limpiamos espacios
  const keywords = description
    .split(';')
    .flatMap(part => part.split(','))
    .map(k => k.trim())
    .filter(k => k.length > 0); // Elimina elementos vacíos

  return [...keywords];
  };

---

<html lang="es">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
				font-size: 2rem;
				text-align: left;
			}
			.date {
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
				text-align: left;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<!-- <div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div> -->
				<div class="prose">
					<div class="title">
						<div class="date">
							<!-- <FormattedDate date={pubDate} /> -->
							<p style="text-align: left;">{formatDate(pubDate)}</p>
							<!-- {
								created_at && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={created_at} />
									</div>
								)
							} -->
						</div>
						<h1>{title}</h1>
						<p style="text-align: left;">{formatAuthors(author)}</p>
            <div class="keywords" style="display: flex; flex-wrap: wrap; gap: 0.4rem;">
            {formatKeywords(sourcename,description).map((keyword) => (
            <span class="badge" style="margin-right: 0.5rem; background-color: #eee; padding: 0.25rem 0.5rem; border-radius: 8px;font-size:.95rem">{keyword}</span>
          ))}
            </div>
						<hr />
            
					</div>
          
					<slot />
          <div style="display:flex; align-items:baseline;gap:1rem; ">
            <a class="back-to-posts-btn" href={linkDownload} target="_blank" rel="noopener noreferrer" >Ver articulo completo</a>
            <p><a target="_blank" rel="noopener noreferrer" href={url} title={sourcename}>DOI</a></p>
          </div>
					<div style="text-align:left; margin: 2em 0;">
						<a href="/blog" style="font-weight:bold">← Volver a los posts</a>
					</div>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>

<style>
.back-to-posts-btn {
    display: inline-block;
    background-color: #ba0c2f;
    color: #fff;
    padding: 0.5em 1em;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    margin-top: 2em;
    transition: background 0.2s;
}
.back-to-posts-btn:hover {
    background-color: #8a0a23;
}
</style>
